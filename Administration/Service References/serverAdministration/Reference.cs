//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Administration.serverAdministration {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Administration.serverAdministration.Patient))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Administration.serverAdministration.Staff))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Addressk__BackingFieldField;
        
        private System.DateTime DateOfBirthk__BackingFieldField;
        
        private string Emailk__BackingFieldField;
        
        private string FirstNamek__BackingFieldField;
        
        private char Genderk__BackingFieldField;
        
        private string InsuranceNumberk__BackingFieldField;
        
        private string LandLineNumberk__BackingFieldField;
        
        private string LastNamek__BackingFieldField;
        
        private string MobileNumberk__BackingFieldField;
        
        private int PersonIdk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Address>k__BackingField", IsRequired=true)]
        public string Addressk__BackingField {
            get {
                return this.Addressk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Addressk__BackingFieldField, value) != true)) {
                    this.Addressk__BackingFieldField = value;
                    this.RaisePropertyChanged("Addressk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateOfBirth>k__BackingField", IsRequired=true)]
        public System.DateTime DateOfBirthk__BackingField {
            get {
                return this.DateOfBirthk__BackingFieldField;
            }
            set {
                if ((this.DateOfBirthk__BackingFieldField.Equals(value) != true)) {
                    this.DateOfBirthk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateOfBirthk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Email>k__BackingField", IsRequired=true)]
        public string Emailk__BackingField {
            get {
                return this.Emailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Emailk__BackingFieldField, value) != true)) {
                    this.Emailk__BackingFieldField = value;
                    this.RaisePropertyChanged("Emailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FirstName>k__BackingField", IsRequired=true)]
        public string FirstNamek__BackingField {
            get {
                return this.FirstNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNamek__BackingFieldField, value) != true)) {
                    this.FirstNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("FirstNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Gender>k__BackingField", IsRequired=true)]
        public char Genderk__BackingField {
            get {
                return this.Genderk__BackingFieldField;
            }
            set {
                if ((this.Genderk__BackingFieldField.Equals(value) != true)) {
                    this.Genderk__BackingFieldField = value;
                    this.RaisePropertyChanged("Genderk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InsuranceNumber>k__BackingField", IsRequired=true)]
        public string InsuranceNumberk__BackingField {
            get {
                return this.InsuranceNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceNumberk__BackingFieldField, value) != true)) {
                    this.InsuranceNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("InsuranceNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LandLineNumber>k__BackingField", IsRequired=true)]
        public string LandLineNumberk__BackingField {
            get {
                return this.LandLineNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineNumberk__BackingFieldField, value) != true)) {
                    this.LandLineNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("LandLineNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LastName>k__BackingField", IsRequired=true)]
        public string LastNamek__BackingField {
            get {
                return this.LastNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNamek__BackingFieldField, value) != true)) {
                    this.LastNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("LastNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<MobileNumber>k__BackingField", IsRequired=true)]
        public string MobileNumberk__BackingField {
            get {
                return this.MobileNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberk__BackingFieldField, value) != true)) {
                    this.MobileNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("MobileNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PersonId>k__BackingField", IsRequired=true)]
        public int PersonIdk__BackingField {
            get {
                return this.PersonIdk__BackingFieldField;
            }
            set {
                if ((this.PersonIdk__BackingFieldField.Equals(value) != true)) {
                    this.PersonIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("PersonIdk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial class Patient : Administration.serverAdministration.Person {
        
        private string BloodTypek__BackingFieldField;
        
        private int ConsultationIdk__BackingFieldField;
        
        private int DiagnosisIdk__BackingFieldField;
        
        private int Heightk__BackingFieldField;
        
        private int PatientIDk__BackingFieldField;
        
        private int PrescriptionIdk__BackingFieldField;
        
        private bool Smokerk__BackingFieldField;
        
        private int SmokingFrequencyk__BackingFieldField;
        
        private int Weightk__BackingFieldField;
        
        private int hard_drugs_frequencyk__BackingFieldField;
        
        private bool hard_drugsk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BloodType>k__BackingField", IsRequired=true)]
        public string BloodTypek__BackingField {
            get {
                return this.BloodTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypek__BackingFieldField, value) != true)) {
                    this.BloodTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("BloodTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ConsultationId>k__BackingField", IsRequired=true)]
        public int ConsultationIdk__BackingField {
            get {
                return this.ConsultationIdk__BackingFieldField;
            }
            set {
                if ((this.ConsultationIdk__BackingFieldField.Equals(value) != true)) {
                    this.ConsultationIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ConsultationIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DiagnosisId>k__BackingField", IsRequired=true)]
        public int DiagnosisIdk__BackingField {
            get {
                return this.DiagnosisIdk__BackingFieldField;
            }
            set {
                if ((this.DiagnosisIdk__BackingFieldField.Equals(value) != true)) {
                    this.DiagnosisIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("DiagnosisIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Height>k__BackingField", IsRequired=true)]
        public int Heightk__BackingField {
            get {
                return this.Heightk__BackingFieldField;
            }
            set {
                if ((this.Heightk__BackingFieldField.Equals(value) != true)) {
                    this.Heightk__BackingFieldField = value;
                    this.RaisePropertyChanged("Heightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PatientID>k__BackingField", IsRequired=true)]
        public int PatientIDk__BackingField {
            get {
                return this.PatientIDk__BackingFieldField;
            }
            set {
                if ((this.PatientIDk__BackingFieldField.Equals(value) != true)) {
                    this.PatientIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PatientIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PrescriptionId>k__BackingField", IsRequired=true)]
        public int PrescriptionIdk__BackingField {
            get {
                return this.PrescriptionIdk__BackingFieldField;
            }
            set {
                if ((this.PrescriptionIdk__BackingFieldField.Equals(value) != true)) {
                    this.PrescriptionIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("PrescriptionIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Smoker>k__BackingField", IsRequired=true)]
        public bool Smokerk__BackingField {
            get {
                return this.Smokerk__BackingFieldField;
            }
            set {
                if ((this.Smokerk__BackingFieldField.Equals(value) != true)) {
                    this.Smokerk__BackingFieldField = value;
                    this.RaisePropertyChanged("Smokerk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SmokingFrequency>k__BackingField", IsRequired=true)]
        public int SmokingFrequencyk__BackingField {
            get {
                return this.SmokingFrequencyk__BackingFieldField;
            }
            set {
                if ((this.SmokingFrequencyk__BackingFieldField.Equals(value) != true)) {
                    this.SmokingFrequencyk__BackingFieldField = value;
                    this.RaisePropertyChanged("SmokingFrequencyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Weight>k__BackingField", IsRequired=true)]
        public int Weightk__BackingField {
            get {
                return this.Weightk__BackingFieldField;
            }
            set {
                if ((this.Weightk__BackingFieldField.Equals(value) != true)) {
                    this.Weightk__BackingFieldField = value;
                    this.RaisePropertyChanged("Weightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<hard_drugs_frequency>k__BackingField", IsRequired=true)]
        public int hard_drugs_frequencyk__BackingField {
            get {
                return this.hard_drugs_frequencyk__BackingFieldField;
            }
            set {
                if ((this.hard_drugs_frequencyk__BackingFieldField.Equals(value) != true)) {
                    this.hard_drugs_frequencyk__BackingFieldField = value;
                    this.RaisePropertyChanged("hard_drugs_frequencyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<hard_drugs>k__BackingField", IsRequired=true)]
        public bool hard_drugsk__BackingField {
            get {
                return this.hard_drugsk__BackingFieldField;
            }
            set {
                if ((this.hard_drugsk__BackingFieldField.Equals(value) != true)) {
                    this.hard_drugsk__BackingFieldField = value;
                    this.RaisePropertyChanged("hard_drugsk__BackingField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial class Staff : Administration.serverAdministration.Person {
        
        private string Functionk__BackingFieldField;
        
        private string RoomNumberk__BackingFieldField;
        
        private string Specializationk__BackingFieldField;
        
        private int StaffIDk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Function>k__BackingField", IsRequired=true)]
        public string Functionk__BackingField {
            get {
                return this.Functionk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Functionk__BackingFieldField, value) != true)) {
                    this.Functionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Functionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RoomNumber>k__BackingField", IsRequired=true)]
        public string RoomNumberk__BackingField {
            get {
                return this.RoomNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomNumberk__BackingFieldField, value) != true)) {
                    this.RoomNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("RoomNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Specialization>k__BackingField", IsRequired=true)]
        public string Specializationk__BackingField {
            get {
                return this.Specializationk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Specializationk__BackingFieldField, value) != true)) {
                    this.Specializationk__BackingFieldField = value;
                    this.RaisePropertyChanged("Specializationk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StaffID>k__BackingField", IsRequired=true)]
        public int StaffIDk__BackingField {
            get {
                return this.StaffIDk__BackingFieldField;
            }
            set {
                if ((this.StaffIDk__BackingFieldField.Equals(value) != true)) {
                    this.StaffIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("StaffIDk__BackingField");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CAdministration.task", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    public enum CAdministrationtask : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        select = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        update = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        insert = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        delete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="serverAdministration.IAdministration")]
    public interface IAdministration {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addPerson", ReplyAction="http://tempuri.org/IAdministration/addPersonResponse")]
        bool addPerson(Administration.serverAdministration.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addPerson", ReplyAction="http://tempuri.org/IAdministration/addPersonResponse")]
        System.Threading.Tasks.Task<bool> addPersonAsync(Administration.serverAdministration.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editPerson", ReplyAction="http://tempuri.org/IAdministration/editPersonResponse")]
        bool editPerson(Administration.serverAdministration.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editPerson", ReplyAction="http://tempuri.org/IAdministration/editPersonResponse")]
        System.Threading.Tasks.Task<bool> editPersonAsync(Administration.serverAdministration.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removePerson", ReplyAction="http://tempuri.org/IAdministration/removePersonResponse")]
        bool removePerson(Administration.serverAdministration.Person person, bool completely);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removePerson", ReplyAction="http://tempuri.org/IAdministration/removePersonResponse")]
        System.Threading.Tasks.Task<bool> removePersonAsync(Administration.serverAdministration.Person person, bool completely);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addPatient", ReplyAction="http://tempuri.org/IAdministration/addPatientResponse")]
        bool addPatient(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addPatient", ReplyAction="http://tempuri.org/IAdministration/addPatientResponse")]
        System.Threading.Tasks.Task<bool> addPatientAsync(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editPatient", ReplyAction="http://tempuri.org/IAdministration/editPatientResponse")]
        bool editPatient(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editPatient", ReplyAction="http://tempuri.org/IAdministration/editPatientResponse")]
        System.Threading.Tasks.Task<bool> editPatientAsync(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removePatient", ReplyAction="http://tempuri.org/IAdministration/removePatientResponse")]
        bool removePatient(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removePatient", ReplyAction="http://tempuri.org/IAdministration/removePatientResponse")]
        System.Threading.Tasks.Task<bool> removePatientAsync(Administration.serverAdministration.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addStaff", ReplyAction="http://tempuri.org/IAdministration/addStaffResponse")]
        bool addStaff(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/addStaff", ReplyAction="http://tempuri.org/IAdministration/addStaffResponse")]
        System.Threading.Tasks.Task<bool> addStaffAsync(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editStaff", ReplyAction="http://tempuri.org/IAdministration/editStaffResponse")]
        bool editStaff(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/editStaff", ReplyAction="http://tempuri.org/IAdministration/editStaffResponse")]
        System.Threading.Tasks.Task<bool> editStaffAsync(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removeStaff", ReplyAction="http://tempuri.org/IAdministration/removeStaffResponse")]
        bool removeStaff(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/removeStaff", ReplyAction="http://tempuri.org/IAdministration/removeStaffResponse")]
        System.Threading.Tasks.Task<bool> removeStaffAsync(Administration.serverAdministration.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/hasPermissions", ReplyAction="http://tempuri.org/IAdministration/hasPermissionsResponse")]
        bool hasPermissions(int id, Administration.serverAdministration.CAdministrationtask t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/hasPermissions", ReplyAction="http://tempuri.org/IAdministration/hasPermissionsResponse")]
        System.Threading.Tasks.Task<bool> hasPermissionsAsync(int id, Administration.serverAdministration.CAdministrationtask t);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/getAllStaff", ReplyAction="http://tempuri.org/IAdministration/getAllStaffResponse")]
        Administration.serverAdministration.Staff[] getAllStaff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/getAllStaff", ReplyAction="http://tempuri.org/IAdministration/getAllStaffResponse")]
        System.Threading.Tasks.Task<Administration.serverAdministration.Staff[]> getAllStaffAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/getStaffById", ReplyAction="http://tempuri.org/IAdministration/getStaffByIdResponse")]
        Administration.serverAdministration.Staff getStaffById(int staffId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdministration/getStaffById", ReplyAction="http://tempuri.org/IAdministration/getStaffByIdResponse")]
        System.Threading.Tasks.Task<Administration.serverAdministration.Staff> getStaffByIdAsync(int staffId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdministrationChannel : Administration.serverAdministration.IAdministration, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministrationClient : System.ServiceModel.ClientBase<Administration.serverAdministration.IAdministration>, Administration.serverAdministration.IAdministration {
        
        public AdministrationClient() {
        }
        
        public AdministrationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministrationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministrationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addPerson(Administration.serverAdministration.Person person) {
            return base.Channel.addPerson(person);
        }
        
        public System.Threading.Tasks.Task<bool> addPersonAsync(Administration.serverAdministration.Person person) {
            return base.Channel.addPersonAsync(person);
        }
        
        public bool editPerson(Administration.serverAdministration.Person person) {
            return base.Channel.editPerson(person);
        }
        
        public System.Threading.Tasks.Task<bool> editPersonAsync(Administration.serverAdministration.Person person) {
            return base.Channel.editPersonAsync(person);
        }
        
        public bool removePerson(Administration.serverAdministration.Person person, bool completely) {
            return base.Channel.removePerson(person, completely);
        }
        
        public System.Threading.Tasks.Task<bool> removePersonAsync(Administration.serverAdministration.Person person, bool completely) {
            return base.Channel.removePersonAsync(person, completely);
        }
        
        public bool addPatient(Administration.serverAdministration.Patient patient) {
            return base.Channel.addPatient(patient);
        }
        
        public System.Threading.Tasks.Task<bool> addPatientAsync(Administration.serverAdministration.Patient patient) {
            return base.Channel.addPatientAsync(patient);
        }
        
        public bool editPatient(Administration.serverAdministration.Patient patient) {
            return base.Channel.editPatient(patient);
        }
        
        public System.Threading.Tasks.Task<bool> editPatientAsync(Administration.serverAdministration.Patient patient) {
            return base.Channel.editPatientAsync(patient);
        }
        
        public bool removePatient(Administration.serverAdministration.Patient patient) {
            return base.Channel.removePatient(patient);
        }
        
        public System.Threading.Tasks.Task<bool> removePatientAsync(Administration.serverAdministration.Patient patient) {
            return base.Channel.removePatientAsync(patient);
        }
        
        public bool addStaff(Administration.serverAdministration.Staff staff) {
            return base.Channel.addStaff(staff);
        }
        
        public System.Threading.Tasks.Task<bool> addStaffAsync(Administration.serverAdministration.Staff staff) {
            return base.Channel.addStaffAsync(staff);
        }
        
        public bool editStaff(Administration.serverAdministration.Staff staff) {
            return base.Channel.editStaff(staff);
        }
        
        public System.Threading.Tasks.Task<bool> editStaffAsync(Administration.serverAdministration.Staff staff) {
            return base.Channel.editStaffAsync(staff);
        }
        
        public bool removeStaff(Administration.serverAdministration.Staff staff) {
            return base.Channel.removeStaff(staff);
        }
        
        public System.Threading.Tasks.Task<bool> removeStaffAsync(Administration.serverAdministration.Staff staff) {
            return base.Channel.removeStaffAsync(staff);
        }
        
        public bool hasPermissions(int id, Administration.serverAdministration.CAdministrationtask t) {
            return base.Channel.hasPermissions(id, t);
        }
        
        public System.Threading.Tasks.Task<bool> hasPermissionsAsync(int id, Administration.serverAdministration.CAdministrationtask t) {
            return base.Channel.hasPermissionsAsync(id, t);
        }
        
        public Administration.serverAdministration.Staff[] getAllStaff() {
            return base.Channel.getAllStaff();
        }
        
        public System.Threading.Tasks.Task<Administration.serverAdministration.Staff[]> getAllStaffAsync() {
            return base.Channel.getAllStaffAsync();
        }
        
        public Administration.serverAdministration.Staff getStaffById(int staffId) {
            return base.Channel.getStaffById(staffId);
        }
        
        public System.Threading.Tasks.Task<Administration.serverAdministration.Staff> getStaffByIdAsync(int staffId) {
            return base.Channel.getStaffByIdAsync(staffId);
        }
    }
}
