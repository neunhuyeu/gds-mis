//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMS_Service.MySynchroniseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DMS_Service.MySynchroniseService.Staff))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DMS_Service.MySynchroniseService.Patient))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Addressk__BackingFieldField;
        
        private System.DateTime DateOfBirthk__BackingFieldField;
        
        private string Emailk__BackingFieldField;
        
        private string FirstNamek__BackingFieldField;
        
        private char Genderk__BackingFieldField;
        
        private string InsuranceNumberk__BackingFieldField;
        
        private string LandLineNumberk__BackingFieldField;
        
        private string LastNamek__BackingFieldField;
        
        private string MobileNumberk__BackingFieldField;
        
        private int PersonIdk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Address>k__BackingField", IsRequired=true)]
        public string Addressk__BackingField {
            get {
                return this.Addressk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Addressk__BackingFieldField, value) != true)) {
                    this.Addressk__BackingFieldField = value;
                    this.RaisePropertyChanged("Addressk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DateOfBirth>k__BackingField", IsRequired=true)]
        public System.DateTime DateOfBirthk__BackingField {
            get {
                return this.DateOfBirthk__BackingFieldField;
            }
            set {
                if ((this.DateOfBirthk__BackingFieldField.Equals(value) != true)) {
                    this.DateOfBirthk__BackingFieldField = value;
                    this.RaisePropertyChanged("DateOfBirthk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Email>k__BackingField", IsRequired=true)]
        public string Emailk__BackingField {
            get {
                return this.Emailk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Emailk__BackingFieldField, value) != true)) {
                    this.Emailk__BackingFieldField = value;
                    this.RaisePropertyChanged("Emailk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FirstName>k__BackingField", IsRequired=true)]
        public string FirstNamek__BackingField {
            get {
                return this.FirstNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNamek__BackingFieldField, value) != true)) {
                    this.FirstNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("FirstNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Gender>k__BackingField", IsRequired=true)]
        public char Genderk__BackingField {
            get {
                return this.Genderk__BackingFieldField;
            }
            set {
                if ((this.Genderk__BackingFieldField.Equals(value) != true)) {
                    this.Genderk__BackingFieldField = value;
                    this.RaisePropertyChanged("Genderk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<InsuranceNumber>k__BackingField", IsRequired=true)]
        public string InsuranceNumberk__BackingField {
            get {
                return this.InsuranceNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceNumberk__BackingFieldField, value) != true)) {
                    this.InsuranceNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("InsuranceNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LandLineNumber>k__BackingField", IsRequired=true)]
        public string LandLineNumberk__BackingField {
            get {
                return this.LandLineNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LandLineNumberk__BackingFieldField, value) != true)) {
                    this.LandLineNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("LandLineNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LastName>k__BackingField", IsRequired=true)]
        public string LastNamek__BackingField {
            get {
                return this.LastNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNamek__BackingFieldField, value) != true)) {
                    this.LastNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("LastNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<MobileNumber>k__BackingField", IsRequired=true)]
        public string MobileNumberk__BackingField {
            get {
                return this.MobileNumberk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileNumberk__BackingFieldField, value) != true)) {
                    this.MobileNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("MobileNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PersonId>k__BackingField", IsRequired=true)]
        public int PersonIdk__BackingField {
            get {
                return this.PersonIdk__BackingFieldField;
            }
            set {
                if ((this.PersonIdk__BackingFieldField.Equals(value) != true)) {
                    this.PersonIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("PersonIdk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial class Staff : DMS_Service.MySynchroniseService.Person {
        
        private DMS_Service.MySynchroniseService.Staff.StaffType Functionk__BackingFieldField;
        
        private int RoomNumberk__BackingFieldField;
        
        private string Specializationk__BackingFieldField;
        
        private int StaffIDk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Function>k__BackingField", IsRequired=true)]
        public DMS_Service.MySynchroniseService.Staff.StaffType Functionk__BackingField {
            get {
                return this.Functionk__BackingFieldField;
            }
            set {
                if ((this.Functionk__BackingFieldField.Equals(value) != true)) {
                    this.Functionk__BackingFieldField = value;
                    this.RaisePropertyChanged("Functionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<RoomNumber>k__BackingField", IsRequired=true)]
        public int RoomNumberk__BackingField {
            get {
                return this.RoomNumberk__BackingFieldField;
            }
            set {
                if ((this.RoomNumberk__BackingFieldField.Equals(value) != true)) {
                    this.RoomNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("RoomNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Specialization>k__BackingField", IsRequired=true)]
        public string Specializationk__BackingField {
            get {
                return this.Specializationk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Specializationk__BackingFieldField, value) != true)) {
                    this.Specializationk__BackingFieldField = value;
                    this.RaisePropertyChanged("Specializationk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StaffID>k__BackingField", IsRequired=true)]
        public int StaffIDk__BackingField {
            get {
                return this.StaffIDk__BackingFieldField;
            }
            set {
                if ((this.StaffIDk__BackingFieldField.Equals(value) != true)) {
                    this.StaffIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("StaffIDk__BackingField");
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="Staff.StaffType", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
        public enum StaffType : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            physician = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            assistant = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            secretary = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial class Patient : DMS_Service.MySynchroniseService.Person {
        
        private string BloodTypek__BackingFieldField;
        
        private int ConsultationIdk__BackingFieldField;
        
        private int DiagnosisIdk__BackingFieldField;
        
        private int Heightk__BackingFieldField;
        
        private int PatientIDk__BackingFieldField;
        
        private int PrescriptionIdk__BackingFieldField;
        
        private bool Smokerk__BackingFieldField;
        
        private int SmokingFrequencyk__BackingFieldField;
        
        private int Weightk__BackingFieldField;
        
        private int hard_drugs_frequencyk__BackingFieldField;
        
        private bool hard_drugsk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<BloodType>k__BackingField", IsRequired=true)]
        public string BloodTypek__BackingField {
            get {
                return this.BloodTypek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypek__BackingFieldField, value) != true)) {
                    this.BloodTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("BloodTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ConsultationId>k__BackingField", IsRequired=true)]
        public int ConsultationIdk__BackingField {
            get {
                return this.ConsultationIdk__BackingFieldField;
            }
            set {
                if ((this.ConsultationIdk__BackingFieldField.Equals(value) != true)) {
                    this.ConsultationIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("ConsultationIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DiagnosisId>k__BackingField", IsRequired=true)]
        public int DiagnosisIdk__BackingField {
            get {
                return this.DiagnosisIdk__BackingFieldField;
            }
            set {
                if ((this.DiagnosisIdk__BackingFieldField.Equals(value) != true)) {
                    this.DiagnosisIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("DiagnosisIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Height>k__BackingField", IsRequired=true)]
        public int Heightk__BackingField {
            get {
                return this.Heightk__BackingFieldField;
            }
            set {
                if ((this.Heightk__BackingFieldField.Equals(value) != true)) {
                    this.Heightk__BackingFieldField = value;
                    this.RaisePropertyChanged("Heightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PatientID>k__BackingField", IsRequired=true)]
        public int PatientIDk__BackingField {
            get {
                return this.PatientIDk__BackingFieldField;
            }
            set {
                if ((this.PatientIDk__BackingFieldField.Equals(value) != true)) {
                    this.PatientIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("PatientIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<PrescriptionId>k__BackingField", IsRequired=true)]
        public int PrescriptionIdk__BackingField {
            get {
                return this.PrescriptionIdk__BackingFieldField;
            }
            set {
                if ((this.PrescriptionIdk__BackingFieldField.Equals(value) != true)) {
                    this.PrescriptionIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("PrescriptionIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Smoker>k__BackingField", IsRequired=true)]
        public bool Smokerk__BackingField {
            get {
                return this.Smokerk__BackingFieldField;
            }
            set {
                if ((this.Smokerk__BackingFieldField.Equals(value) != true)) {
                    this.Smokerk__BackingFieldField = value;
                    this.RaisePropertyChanged("Smokerk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SmokingFrequency>k__BackingField", IsRequired=true)]
        public int SmokingFrequencyk__BackingField {
            get {
                return this.SmokingFrequencyk__BackingFieldField;
            }
            set {
                if ((this.SmokingFrequencyk__BackingFieldField.Equals(value) != true)) {
                    this.SmokingFrequencyk__BackingFieldField = value;
                    this.RaisePropertyChanged("SmokingFrequencyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Weight>k__BackingField", IsRequired=true)]
        public int Weightk__BackingField {
            get {
                return this.Weightk__BackingFieldField;
            }
            set {
                if ((this.Weightk__BackingFieldField.Equals(value) != true)) {
                    this.Weightk__BackingFieldField = value;
                    this.RaisePropertyChanged("Weightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<hard_drugs_frequency>k__BackingField", IsRequired=true)]
        public int hard_drugs_frequencyk__BackingField {
            get {
                return this.hard_drugs_frequencyk__BackingFieldField;
            }
            set {
                if ((this.hard_drugs_frequencyk__BackingFieldField.Equals(value) != true)) {
                    this.hard_drugs_frequencyk__BackingFieldField = value;
                    this.RaisePropertyChanged("hard_drugs_frequencyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<hard_drugs>k__BackingField", IsRequired=true)]
        public bool hard_drugsk__BackingField {
            get {
                return this.hard_drugsk__BackingFieldField;
            }
            set {
                if ((this.hard_drugsk__BackingFieldField.Equals(value) != true)) {
                    this.hard_drugsk__BackingFieldField = value;
                    this.RaisePropertyChanged("hard_drugsk__BackingField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial struct Appointment : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string[] Diagnosisk__BackingFieldField;
        
        private bool canceledk__BackingFieldField;
        
        private System.DateTime endTimek__BackingFieldField;
        
        private string notesk__BackingFieldField;
        
        private DMS_Service.MySynchroniseService.Perscription[] perscriptionsk__BackingFieldField;
        
        private System.DateTime startTimek__BackingFieldField;
        
        private string[] symptomsk__BackingFieldField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Diagnosis>k__BackingField", IsRequired=true)]
        public string[] Diagnosisk__BackingField {
            get {
                return this.Diagnosisk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Diagnosisk__BackingFieldField, value) != true)) {
                    this.Diagnosisk__BackingFieldField = value;
                    this.RaisePropertyChanged("Diagnosisk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<canceled>k__BackingField", IsRequired=true)]
        public bool canceledk__BackingField {
            get {
                return this.canceledk__BackingFieldField;
            }
            set {
                if ((this.canceledk__BackingFieldField.Equals(value) != true)) {
                    this.canceledk__BackingFieldField = value;
                    this.RaisePropertyChanged("canceledk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<endTime>k__BackingField", IsRequired=true)]
        public System.DateTime endTimek__BackingField {
            get {
                return this.endTimek__BackingFieldField;
            }
            set {
                if ((this.endTimek__BackingFieldField.Equals(value) != true)) {
                    this.endTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("endTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<notes>k__BackingField", IsRequired=true)]
        public string notesk__BackingField {
            get {
                return this.notesk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.notesk__BackingFieldField, value) != true)) {
                    this.notesk__BackingFieldField = value;
                    this.RaisePropertyChanged("notesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<perscriptions>k__BackingField", IsRequired=true)]
        public DMS_Service.MySynchroniseService.Perscription[] perscriptionsk__BackingField {
            get {
                return this.perscriptionsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.perscriptionsk__BackingFieldField, value) != true)) {
                    this.perscriptionsk__BackingFieldField = value;
                    this.RaisePropertyChanged("perscriptionsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<startTime>k__BackingField", IsRequired=true)]
        public System.DateTime startTimek__BackingField {
            get {
                return this.startTimek__BackingFieldField;
            }
            set {
                if ((this.startTimek__BackingFieldField.Equals(value) != true)) {
                    this.startTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("startTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<symptoms>k__BackingField", IsRequired=true)]
        public string[] symptomsk__BackingField {
            get {
                return this.symptomsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.symptomsk__BackingFieldField, value) != true)) {
                    this.symptomsk__BackingFieldField = value;
                    this.RaisePropertyChanged("symptomsk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Perscription", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial struct Perscription : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int amount_mlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int amount_pillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string doctorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int doctorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string medicineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int strengthField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int amount_ml {
            get {
                return this.amount_mlField;
            }
            set {
                if ((this.amount_mlField.Equals(value) != true)) {
                    this.amount_mlField = value;
                    this.RaisePropertyChanged("amount_ml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int amount_pills {
            get {
                return this.amount_pillsField;
            }
            set {
                if ((this.amount_pillsField.Equals(value) != true)) {
                    this.amount_pillsField = value;
                    this.RaisePropertyChanged("amount_pills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string doctor {
            get {
                return this.doctorField;
            }
            set {
                if ((object.ReferenceEquals(this.doctorField, value) != true)) {
                    this.doctorField = value;
                    this.RaisePropertyChanged("doctor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int doctorId {
            get {
                return this.doctorIdField;
            }
            set {
                if ((this.doctorIdField.Equals(value) != true)) {
                    this.doctorIdField = value;
                    this.RaisePropertyChanged("doctorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string medicine {
            get {
                return this.medicineField;
            }
            set {
                if ((object.ReferenceEquals(this.medicineField, value) != true)) {
                    this.medicineField = value;
                    this.RaisePropertyChanged("medicine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int strength {
            get {
                return this.strengthField;
            }
            set {
                if ((this.strengthField.Equals(value) != true)) {
                    this.strengthField = value;
                    this.RaisePropertyChanged("strength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Consultation", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service.Structs")]
    [System.SerializableAttribute()]
    public partial struct Consultation : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int consultationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime end_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int patient_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int staff_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime start_dateField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int consultationID {
            get {
                return this.consultationIDField;
            }
            set {
                if ((this.consultationIDField.Equals(value) != true)) {
                    this.consultationIDField = value;
                    this.RaisePropertyChanged("consultationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime end_date {
            get {
                return this.end_dateField;
            }
            set {
                if ((this.end_dateField.Equals(value) != true)) {
                    this.end_dateField = value;
                    this.RaisePropertyChanged("end_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int patient_id {
            get {
                return this.patient_idField;
            }
            set {
                if ((this.patient_idField.Equals(value) != true)) {
                    this.patient_idField = value;
                    this.RaisePropertyChanged("patient_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int staff_id {
            get {
                return this.staff_idField;
            }
            set {
                if ((this.staff_idField.Equals(value) != true)) {
                    this.staff_idField = value;
                    this.RaisePropertyChanged("staff_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime start_date {
            get {
                return this.start_dateField;
            }
            set {
                if ((this.start_dateField.Equals(value) != true)) {
                    this.start_dateField = value;
                    this.RaisePropertyChanged("start_date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MySynchroniseService.ISynchronise")]
    public interface ISynchronise {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addPatient", ReplyAction="http://tempuri.org/ISynchronise/addPatientResponse")]
        void addPatient(DMS_Service.MySynchroniseService.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addPatient", ReplyAction="http://tempuri.org/ISynchronise/addPatientResponse")]
        System.Threading.Tasks.Task addPatientAsync(DMS_Service.MySynchroniseService.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addAppointment", ReplyAction="http://tempuri.org/ISynchronise/addAppointmentResponse")]
        void addAppointment(DMS_Service.MySynchroniseService.Appointment appointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addAppointment", ReplyAction="http://tempuri.org/ISynchronise/addAppointmentResponse")]
        System.Threading.Tasks.Task addAppointmentAsync(DMS_Service.MySynchroniseService.Appointment appointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addStaff", ReplyAction="http://tempuri.org/ISynchronise/addStaffResponse")]
        void addStaff(DMS_Service.MySynchroniseService.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addStaff", ReplyAction="http://tempuri.org/ISynchronise/addStaffResponse")]
        System.Threading.Tasks.Task addStaffAsync(DMS_Service.MySynchroniseService.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addConsultation", ReplyAction="http://tempuri.org/ISynchronise/addConsultationResponse")]
        void addConsultation(DMS_Service.MySynchroniseService.Consultation consult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/addConsultation", ReplyAction="http://tempuri.org/ISynchronise/addConsultationResponse")]
        System.Threading.Tasks.Task addConsultationAsync(DMS_Service.MySynchroniseService.Consultation consult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/editPatientByPatient", ReplyAction="http://tempuri.org/ISynchronise/editPatientByPatientResponse")]
        void editPatientByPatient(DMS_Service.MySynchroniseService.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/editPatientByPatient", ReplyAction="http://tempuri.org/ISynchronise/editPatientByPatientResponse")]
        System.Threading.Tasks.Task editPatientByPatientAsync(DMS_Service.MySynchroniseService.Patient patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/editPatientByAppointment", ReplyAction="http://tempuri.org/ISynchronise/editPatientByAppointmentResponse")]
        void editPatientByAppointment(DMS_Service.MySynchroniseService.Appointment appointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/editPatientByAppointment", ReplyAction="http://tempuri.org/ISynchronise/editPatientByAppointmentResponse")]
        System.Threading.Tasks.Task editPatientByAppointmentAsync(DMS_Service.MySynchroniseService.Appointment appointment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/ping", ReplyAction="http://tempuri.org/ISynchronise/pingResponse")]
        bool ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISynchronise/ping", ReplyAction="http://tempuri.org/ISynchronise/pingResponse")]
        System.Threading.Tasks.Task<bool> pingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISynchroniseChannel : DMS_Service.MySynchroniseService.ISynchronise, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SynchroniseClient : System.ServiceModel.ClientBase<DMS_Service.MySynchroniseService.ISynchronise>, DMS_Service.MySynchroniseService.ISynchronise {
        
        public SynchroniseClient() {
        }
        
        public SynchroniseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SynchroniseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SynchroniseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SynchroniseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void addPatient(DMS_Service.MySynchroniseService.Patient patient) {
            base.Channel.addPatient(patient);
        }
        
        public System.Threading.Tasks.Task addPatientAsync(DMS_Service.MySynchroniseService.Patient patient) {
            return base.Channel.addPatientAsync(patient);
        }
        
        public void addAppointment(DMS_Service.MySynchroniseService.Appointment appointment) {
            base.Channel.addAppointment(appointment);
        }
        
        public System.Threading.Tasks.Task addAppointmentAsync(DMS_Service.MySynchroniseService.Appointment appointment) {
            return base.Channel.addAppointmentAsync(appointment);
        }
        
        public void addStaff(DMS_Service.MySynchroniseService.Staff staff) {
            base.Channel.addStaff(staff);
        }
        
        public System.Threading.Tasks.Task addStaffAsync(DMS_Service.MySynchroniseService.Staff staff) {
            return base.Channel.addStaffAsync(staff);
        }
        
        public void addConsultation(DMS_Service.MySynchroniseService.Consultation consult) {
            base.Channel.addConsultation(consult);
        }
        
        public System.Threading.Tasks.Task addConsultationAsync(DMS_Service.MySynchroniseService.Consultation consult) {
            return base.Channel.addConsultationAsync(consult);
        }
        
        public void editPatientByPatient(DMS_Service.MySynchroniseService.Patient patient) {
            base.Channel.editPatientByPatient(patient);
        }
        
        public System.Threading.Tasks.Task editPatientByPatientAsync(DMS_Service.MySynchroniseService.Patient patient) {
            return base.Channel.editPatientByPatientAsync(patient);
        }
        
        public void editPatientByAppointment(DMS_Service.MySynchroniseService.Appointment appointment) {
            base.Channel.editPatientByAppointment(appointment);
        }
        
        public System.Threading.Tasks.Task editPatientByAppointmentAsync(DMS_Service.MySynchroniseService.Appointment appointment) {
            return base.Channel.editPatientByAppointmentAsync(appointment);
        }
        
        public bool ping() {
            return base.Channel.ping();
        }
        
        public System.Threading.Tasks.Task<bool> pingAsync() {
            return base.Channel.pingAsync();
        }
    }
}
