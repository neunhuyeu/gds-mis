//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Doctor_Client.MyDoctorService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Doctor_Client.MyDoctorService.Staff))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Doctor_Client.MyDoctorService.Patient))]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int addressk__BackingFieldField;
        
        private int dateOfBirthk__BackingFieldField;
        
        private int emailAddressk__BackingFieldField;
        
        private int genderk__BackingFieldField;
        
        private int houseNumberk__BackingFieldField;
        
        private int lastNamek__BackingFieldField;
        
        private int mobileNumberk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<address>k__BackingField", IsRequired=true)]
        public int addressk__BackingField {
            get {
                return this.addressk__BackingFieldField;
            }
            set {
                if ((this.addressk__BackingFieldField.Equals(value) != true)) {
                    this.addressk__BackingFieldField = value;
                    this.RaisePropertyChanged("addressk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<dateOfBirth>k__BackingField", IsRequired=true)]
        public int dateOfBirthk__BackingField {
            get {
                return this.dateOfBirthk__BackingFieldField;
            }
            set {
                if ((this.dateOfBirthk__BackingFieldField.Equals(value) != true)) {
                    this.dateOfBirthk__BackingFieldField = value;
                    this.RaisePropertyChanged("dateOfBirthk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<emailAddress>k__BackingField", IsRequired=true)]
        public int emailAddressk__BackingField {
            get {
                return this.emailAddressk__BackingFieldField;
            }
            set {
                if ((this.emailAddressk__BackingFieldField.Equals(value) != true)) {
                    this.emailAddressk__BackingFieldField = value;
                    this.RaisePropertyChanged("emailAddressk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<gender>k__BackingField", IsRequired=true)]
        public int genderk__BackingField {
            get {
                return this.genderk__BackingFieldField;
            }
            set {
                if ((this.genderk__BackingFieldField.Equals(value) != true)) {
                    this.genderk__BackingFieldField = value;
                    this.RaisePropertyChanged("genderk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<houseNumber>k__BackingField", IsRequired=true)]
        public int houseNumberk__BackingField {
            get {
                return this.houseNumberk__BackingFieldField;
            }
            set {
                if ((this.houseNumberk__BackingFieldField.Equals(value) != true)) {
                    this.houseNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("houseNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<lastName>k__BackingField", IsRequired=true)]
        public int lastNamek__BackingField {
            get {
                return this.lastNamek__BackingFieldField;
            }
            set {
                if ((this.lastNamek__BackingFieldField.Equals(value) != true)) {
                    this.lastNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("lastNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<mobileNumber>k__BackingField", IsRequired=true)]
        public int mobileNumberk__BackingField {
            get {
                return this.mobileNumberk__BackingFieldField;
            }
            set {
                if ((this.mobileNumberk__BackingFieldField.Equals(value) != true)) {
                    this.mobileNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("mobileNumberk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    [System.SerializableAttribute()]
    public partial class Staff : Doctor_Client.MyDoctorService.Person {
        
        private int functionk__BackingFieldField;
        
        private int roomNumberk__BackingFieldField;
        
        private int specializationk__BackingFieldField;
        
        private int staffIDk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<function>k__BackingField", IsRequired=true)]
        public int functionk__BackingField {
            get {
                return this.functionk__BackingFieldField;
            }
            set {
                if ((this.functionk__BackingFieldField.Equals(value) != true)) {
                    this.functionk__BackingFieldField = value;
                    this.RaisePropertyChanged("functionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<roomNumber>k__BackingField", IsRequired=true)]
        public int roomNumberk__BackingField {
            get {
                return this.roomNumberk__BackingFieldField;
            }
            set {
                if ((this.roomNumberk__BackingFieldField.Equals(value) != true)) {
                    this.roomNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("roomNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<specialization>k__BackingField", IsRequired=true)]
        public int specializationk__BackingField {
            get {
                return this.specializationk__BackingFieldField;
            }
            set {
                if ((this.specializationk__BackingFieldField.Equals(value) != true)) {
                    this.specializationk__BackingFieldField = value;
                    this.RaisePropertyChanged("specializationk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<staffID>k__BackingField", IsRequired=true)]
        public int staffIDk__BackingField {
            get {
                return this.staffIDk__BackingFieldField;
            }
            set {
                if ((this.staffIDk__BackingFieldField.Equals(value) != true)) {
                    this.staffIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("staffIDk__BackingField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Patient", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    [System.SerializableAttribute()]
    public partial class Patient : Doctor_Client.MyDoctorService.Person {
        
        private int bloodTypek__BackingFieldField;
        
        private int heightk__BackingFieldField;
        
        private int insuranceNumberk__BackingFieldField;
        
        private int patientIDk__BackingFieldField;
        
        private int primaryPhysiciank__BackingFieldField;
        
        private int smokerk__BackingFieldField;
        
        private int smokingFrequencyk__BackingFieldField;
        
        private int weightk__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<bloodType>k__BackingField", IsRequired=true)]
        public int bloodTypek__BackingField {
            get {
                return this.bloodTypek__BackingFieldField;
            }
            set {
                if ((this.bloodTypek__BackingFieldField.Equals(value) != true)) {
                    this.bloodTypek__BackingFieldField = value;
                    this.RaisePropertyChanged("bloodTypek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<height>k__BackingField", IsRequired=true)]
        public int heightk__BackingField {
            get {
                return this.heightk__BackingFieldField;
            }
            set {
                if ((this.heightk__BackingFieldField.Equals(value) != true)) {
                    this.heightk__BackingFieldField = value;
                    this.RaisePropertyChanged("heightk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<insuranceNumber>k__BackingField", IsRequired=true)]
        public int insuranceNumberk__BackingField {
            get {
                return this.insuranceNumberk__BackingFieldField;
            }
            set {
                if ((this.insuranceNumberk__BackingFieldField.Equals(value) != true)) {
                    this.insuranceNumberk__BackingFieldField = value;
                    this.RaisePropertyChanged("insuranceNumberk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<patientID>k__BackingField", IsRequired=true)]
        public int patientIDk__BackingField {
            get {
                return this.patientIDk__BackingFieldField;
            }
            set {
                if ((this.patientIDk__BackingFieldField.Equals(value) != true)) {
                    this.patientIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("patientIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<primaryPhysician>k__BackingField", IsRequired=true)]
        public int primaryPhysiciank__BackingField {
            get {
                return this.primaryPhysiciank__BackingFieldField;
            }
            set {
                if ((this.primaryPhysiciank__BackingFieldField.Equals(value) != true)) {
                    this.primaryPhysiciank__BackingFieldField = value;
                    this.RaisePropertyChanged("primaryPhysiciank__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<smoker>k__BackingField", IsRequired=true)]
        public int smokerk__BackingField {
            get {
                return this.smokerk__BackingFieldField;
            }
            set {
                if ((this.smokerk__BackingFieldField.Equals(value) != true)) {
                    this.smokerk__BackingFieldField = value;
                    this.RaisePropertyChanged("smokerk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<smokingFrequency>k__BackingField", IsRequired=true)]
        public int smokingFrequencyk__BackingField {
            get {
                return this.smokingFrequencyk__BackingFieldField;
            }
            set {
                if ((this.smokingFrequencyk__BackingFieldField.Equals(value) != true)) {
                    this.smokingFrequencyk__BackingFieldField = value;
                    this.RaisePropertyChanged("smokingFrequencyk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<weight>k__BackingField", IsRequired=true)]
        public int weightk__BackingField {
            get {
                return this.weightk__BackingFieldField;
            }
            set {
                if ((this.weightk__BackingFieldField.Equals(value) != true)) {
                    this.weightk__BackingFieldField = value;
                    this.RaisePropertyChanged("weightk__BackingField");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Appointment", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    [System.SerializableAttribute()]
    public partial struct Appointment : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor_Client.MyDoctorService.Patient PatientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Doctor_Client.MyDoctorService.Staff StaffField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor_Client.MyDoctorService.Patient Patient {
            get {
                return this.PatientField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientField, value) != true)) {
                    this.PatientField = value;
                    this.RaisePropertyChanged("Patient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Doctor_Client.MyDoctorService.Staff Staff {
            get {
                return this.StaffField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffField, value) != true)) {
                    this.StaffField = value;
                    this.RaisePropertyChanged("Staff");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Perscription", Namespace="http://schemas.datacontract.org/2004/07/DMS_Service")]
    [System.SerializableAttribute()]
    public partial struct Perscription : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyDoctorService.IDoctor")]
    public interface IDoctor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientOverview", ReplyAction="http://tempuri.org/IDoctor/getPatientOverviewResponse")]
        Doctor_Client.MyDoctorService.Patient getPatientOverview(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientOverview", ReplyAction="http://tempuri.org/IDoctor/getPatientOverviewResponse")]
        System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Patient> getPatientOverviewAsync(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientDiseases", ReplyAction="http://tempuri.org/IDoctor/getPatientDiseasesResponse")]
        string[] getPatientDiseases(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientDiseases", ReplyAction="http://tempuri.org/IDoctor/getPatientDiseasesResponse")]
        System.Threading.Tasks.Task<string[]> getPatientDiseasesAsync(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientAppointments", ReplyAction="http://tempuri.org/IDoctor/getPatientAppointmentsResponse")]
        Doctor_Client.MyDoctorService.Appointment[] getPatientAppointments(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientAppointments", ReplyAction="http://tempuri.org/IDoctor/getPatientAppointmentsResponse")]
        System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Appointment[]> getPatientAppointmentsAsync(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientPerscriptions", ReplyAction="http://tempuri.org/IDoctor/getPatientPerscriptionsResponse")]
        Doctor_Client.MyDoctorService.Perscription[] getPatientPerscriptions(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/getPatientPerscriptions", ReplyAction="http://tempuri.org/IDoctor/getPatientPerscriptionsResponse")]
        System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Perscription[]> getPatientPerscriptionsAsync(int patientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/login", ReplyAction="http://tempuri.org/IDoctor/loginResponse")]
        Doctor_Client.MyDoctorService.Staff login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/login", ReplyAction="http://tempuri.org/IDoctor/loginResponse")]
        System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Staff> loginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/logout", ReplyAction="http://tempuri.org/IDoctor/logoutResponse")]
        void logout(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/logout", ReplyAction="http://tempuri.org/IDoctor/logoutResponse")]
        System.Threading.Tasks.Task logoutAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/search", ReplyAction="http://tempuri.org/IDoctor/searchResponse")]
        Doctor_Client.MyDoctorService.Patient[] search(string name, string dateOfBirth, string insuranceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/search", ReplyAction="http://tempuri.org/IDoctor/searchResponse")]
        System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Patient[]> searchAsync(string name, string dateOfBirth, string insuranceNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/setPerscription", ReplyAction="http://tempuri.org/IDoctor/setPerscriptionResponse")]
        string setPerscription(int appointmentID, Doctor_Client.MyDoctorService.Perscription perscription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDoctor/setPerscription", ReplyAction="http://tempuri.org/IDoctor/setPerscriptionResponse")]
        System.Threading.Tasks.Task<string> setPerscriptionAsync(int appointmentID, Doctor_Client.MyDoctorService.Perscription perscription);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDoctorChannel : Doctor_Client.MyDoctorService.IDoctor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoctorClient : System.ServiceModel.ClientBase<Doctor_Client.MyDoctorService.IDoctor>, Doctor_Client.MyDoctorService.IDoctor {
        
        public DoctorClient() {
        }
        
        public DoctorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DoctorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DoctorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Doctor_Client.MyDoctorService.Patient getPatientOverview(int patientID) {
            return base.Channel.getPatientOverview(patientID);
        }
        
        public System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Patient> getPatientOverviewAsync(int patientID) {
            return base.Channel.getPatientOverviewAsync(patientID);
        }
        
        public string[] getPatientDiseases(int patientID) {
            return base.Channel.getPatientDiseases(patientID);
        }
        
        public System.Threading.Tasks.Task<string[]> getPatientDiseasesAsync(int patientID) {
            return base.Channel.getPatientDiseasesAsync(patientID);
        }
        
        public Doctor_Client.MyDoctorService.Appointment[] getPatientAppointments(int patientID) {
            return base.Channel.getPatientAppointments(patientID);
        }
        
        public System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Appointment[]> getPatientAppointmentsAsync(int patientID) {
            return base.Channel.getPatientAppointmentsAsync(patientID);
        }
        
        public Doctor_Client.MyDoctorService.Perscription[] getPatientPerscriptions(int patientID) {
            return base.Channel.getPatientPerscriptions(patientID);
        }
        
        public System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Perscription[]> getPatientPerscriptionsAsync(int patientID) {
            return base.Channel.getPatientPerscriptionsAsync(patientID);
        }
        
        public Doctor_Client.MyDoctorService.Staff login(string email, string password) {
            return base.Channel.login(email, password);
        }
        
        public System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Staff> loginAsync(string email, string password) {
            return base.Channel.loginAsync(email, password);
        }
        
        public void logout(string email) {
            base.Channel.logout(email);
        }
        
        public System.Threading.Tasks.Task logoutAsync(string email) {
            return base.Channel.logoutAsync(email);
        }
        
        public Doctor_Client.MyDoctorService.Patient[] search(string name, string dateOfBirth, string insuranceNumber) {
            return base.Channel.search(name, dateOfBirth, insuranceNumber);
        }
        
        public System.Threading.Tasks.Task<Doctor_Client.MyDoctorService.Patient[]> searchAsync(string name, string dateOfBirth, string insuranceNumber) {
            return base.Channel.searchAsync(name, dateOfBirth, insuranceNumber);
        }
        
        public string setPerscription(int appointmentID, Doctor_Client.MyDoctorService.Perscription perscription) {
            return base.Channel.setPerscription(appointmentID, perscription);
        }
        
        public System.Threading.Tasks.Task<string> setPerscriptionAsync(int appointmentID, Doctor_Client.MyDoctorService.Perscription perscription) {
            return base.Channel.setPerscriptionAsync(appointmentID, perscription);
        }
    }
}
